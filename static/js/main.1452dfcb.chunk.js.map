{"version":3,"sources":["componets/Join.js","componets/Navbar.js","componets/Input.js","componets/Message.js","componets/Messages.js","componets/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["Join","useState","name","setName","room","setRoom","className","type","placeholder","value","onChange","e","target","id","to","onClick","alert","preventDefault","Navbar","href","Input","message","setMessage","sendmessage","Message","user","text","issentbyCurrentUser","trimmedName","trim","toLowerCase","style","backgroundColor","color","marginLeft","Messages","socket","messages","map","idx","Chat","location","setMessages","ENDPOINT","useEffect","queryString","parse","search","io","emit","off","on","console","log","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1452dfcb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './join.css'\r\n\r\nfunction Join() {\r\n\r\n    const [ name, setName ] = useState( '' )\r\n    const [ room, setRoom ] = useState( '' )\r\n\r\n    const submit = ( e ) => {\r\n        if ( name === '' || room === '' ) {\r\n            alert( \"Cannot be Empty\" )\r\n            e.preventDefault()\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n       <div className=\"backimg\">\r\n            <div className=\"container\">\r\n            <div className=\"container-box\">\r\n                        <h1>Join Room</h1>\r\n                        <input type=\"text\" name=\"name\" placeholder=\"Name\" value={ name }\r\n                            onChange={ ( e ) => { setName( e.target.value ) } } id=\"input\" /><br />\r\n\r\n                        <input type=\"text\" name=\"room\" placeholder=\"Room\" value={ room }\r\n                            onChange={ ( e ) => { setRoom( e.target.value ) } } id=\"input\" /><br />\r\n\r\n                        <Link to={ `./chat?name=${name}&room=${room}` }>\r\n                            <button onClick={ submit } id=\"btn-grad\">Join</button>\r\n                        </Link>\r\n                        </div>\r\n            </div>\r\n        </div>       \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Join\r\n\r\n","import React from 'react'\r\nimport './chat.css'\r\n\r\nfunction Navbar( { room } ) {\r\n    return (\r\n        <>\r\n            <div className=\"navbarcontent\">\r\n                <div className=\"room\">\r\n                        <h3> Room Name: { room } </h3>\r\n                    </div>\r\n\r\n                    <div className=\"clsbtn\">\r\n                        <a href='/'>&#x2716;</a>\r\n                    </div>\r\n                </div>\r\n                \r\n           \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\n\r\nfunction Input({message,setMessage,sendmessage}) {\r\n\r\n    \r\nreturn (\r\n        <>\r\n        <form>\r\n        <div className=\"chatbox\">\r\n        <input type=\"text\" value={message} onChange={(e) => {setMessage(e.target.value)}}\r\n        placeholder=\"Type a Message....\" id=\"input1\"/>\r\n        <button onClick={sendmessage} id=\"btnn1\">send</button>     \r\n        </div> \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nfunction Message({message:{user ,text},name}) {\r\n\r\nlet issentbyCurrentUser = false;\r\n\r\nconst trimmedName = name.trim().toLowerCase()\r\n\r\nif(user===trimmedName){\r\n    issentbyCurrentUser=true\r\n}\r\n\r\n\r\n    return (\r\n        issentbyCurrentUser ?\r\n        (\r\n            <div className=\"messagecontainer\">\r\n                <p>{trimmedName}</p>\r\n                <div className=\"msgbox\" style={{backgroundColor:\"#2b39f5\",color:\"white\"}}>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        ):\r\n\r\n        (\r\n            <div className=\"messagecontainer\">\r\n            <div className=\"msgbox\" style={{backgroundColor:\"white\",marginLeft:\"270px\"}}>\r\n                <p className=\"user\">{text}</p>\r\n            </div>\r\n            <p>{user}</p>\r\n        </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nfunction Messages({messages,name}) {\r\n    return (\r\n        <>\r\n         <div className=\"Messages\">\r\n        {\r\n            messages.map((message,idx) => <div key={idx}>\r\n            <Message message={message} name={name}/></div> )\r\n        }     \r\n        </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n","import React,{useState,useEffect} from 'react'\r\nimport queryString from 'query-string'\r\nimport {io} from 'socket.io-client'\r\nimport Navbar from './Navbar.js'\r\nimport Input from './Input.js'\r\nimport Messages from './Messages.js'\r\nimport './chat.css'\r\n\r\nlet socket\r\nconst Chat = ( {location} ) => {\r\n\r\nconst[name,setName] = useState('')\r\nconst [room,setRoom] = useState('')\r\nconst [message,setMessage] = useState('')\r\nconst[messages,setMessages] = useState([])\r\nconst ENDPOINT = 'localhost:5000'\r\n\r\n\r\nuseEffect(() => {\r\n    const {name,room}= queryString.parse(location.search);\r\n     socket = io(ENDPOINT)\r\n    \r\n    setName(name)\r\n    setRoom(room)\r\n\r\n    socket.emit('join',{name,room})\r\n    \r\n    return () => {\r\n        socket.emit('disconnectt')\r\n        socket.off()\r\n    }\r\n},[ENDPOINT,location.search])\r\n\r\nuseEffect(() => {\r\n    socket.on('message',(message) => {\r\n    setMessages([...messages,message])\r\n    })\r\n},[messages])\r\n\r\nconst sendmessage = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(message){\r\n        socket.emit('sendmessage',message, ()=> setMessage(''))\r\n    }\r\n}\r\n\r\n\r\n\r\nconsole.log(messages,message);\r\n\r\n    return (\r\n        <>\r\n        <div className=\"chat-container\">\r\n        <Navbar room={room}/>\r\n         <Messages messages={messages} name={name}/>\r\n        </div>\r\n        <Input message={message} setMessage={setMessage} sendmessage={sendmessage}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import './App.css';\nimport { BrowserRouter as Router,Route} from \"react-router-dom\";\nimport Join from './componets/Join';\nimport Chat from './componets/Chat'\n\nfunction App() {\n  return (\n    <>\n    <Router>\n\n    <Route exact path='/' component={Join}></Route>\n    <Route exact path='/chat' component={Chat}></Route>\n\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}